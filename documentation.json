{
    "pipes": [
        {
            "name": "Co2Pipe",
            "id": "pipe-Co2Pipe-c7fca5ebda4787671a7c6bbbc597fe24ed4fc24c790f1c3e64af2bde9f7661a8e0c65e460b7778559199d4de8e7fdfc8988bcf5bed73ea22d64b34fa84c0d860",
            "file": "src/app/pipes/co2.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "unit",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'kg'"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "unit",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'kg'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "co2",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'co2',\r\n})\r\nexport class Co2Pipe implements PipeTransform {\r\n  transform(value: number, unit: string = 'kg'): string {\r\n    return value != null ? `${value} ${unit} CO2` : '-';\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-a64df19b3afbdb172987039db6c4a193d351025b9eb192d4540e642870bc69948e383fc4af77e87c9af3090ece05100eadd79dcd7407a3f3085f492a9583b55b",
            "file": "src/app/store/app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TripDef } from '@app/interfaces/trip-def.interface';\r\nimport {\r\n  TripsFilterSortProperty,\r\n  TripsPagination,\r\n} from '@app/interfaces/trips-filter.interface';\r\n\r\nexport interface AppState {\r\n  listOfTrips: {\r\n    items: TripDef[];\r\n    itemsNumber: number;\r\n    pagination: TripsPagination;\r\n    isLoading: boolean;\r\n    hasError: boolean;\r\n  };\r\n  selectedTrip: {\r\n    item?: TripDef;\r\n    isLoading: boolean;\r\n    hasError: boolean;\r\n  };\r\n  tripOfTheDay: {\r\n    item?: TripDef;\r\n    isLoading: boolean;\r\n    hasError: boolean;\r\n  };\r\n}\r\n\r\nexport const initialState: AppState = {\r\n  listOfTrips: {\r\n    items: [],\r\n    itemsNumber: 0,\r\n    pagination: {\r\n      pageNumber: 1,\r\n      pageSize: 5,\r\n      sortProperty: TripsFilterSortProperty.title,\r\n      sortDescending: false,\r\n    },\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  selectedTrip: {\r\n    item: undefined,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  tripOfTheDay: {\r\n    item: undefined,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n};\r\n",
            "properties": [
                {
                    "name": "listOfTrips",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "selectedTrip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "tripOfTheDay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListOfTripsDef",
            "id": "interface-ListOfTripsDef-dc729178cc991f97d91abe69aa2993939d5d7d8ca8cdb960e52bad7671eb421769d71456b38f7e4e8a0da713c0cd3fb5b75a644a26eadfa7d35d6dd6cfe0161a",
            "file": "src/app/interfaces/trip-def.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VerticalType } from '@app/enum/vertical-type.enum';\r\n\r\nexport interface ListOfTripsDef {\r\n  items: TripDef[];\r\n  limit: number;\r\n  page: number;\r\n  total: number;\r\n}\r\n\r\nexport interface TripDef {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  price: number;\r\n  rating: number;\r\n  numberOfRatings: number;\r\n  verticalType: VerticalType;\r\n  tags: string[];\r\n  co2Emission: number;\r\n  thumbnailUrl: string;\r\n  imageUrl: string;\r\n  creationDate: Date;\r\n  score?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TripDef[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListOfTripsDto",
            "id": "interface-ListOfTripsDto-7bcf952807831894d93024672d909a5cfc14d310ba5acebc4ed1ade1069fa5734842147388f243a4701839c4cb500116d496453acc2b462efe4fc9ebe87be186",
            "file": "src/app/interfaces/trip-dto.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VerticalType } from '@app/enum/vertical-type.enum';\r\n\r\nexport interface ListOfTripsDto {\r\n    items: TripDto[];\r\n    limit: number;\r\n    page: number;\r\n    total: number;\r\n}\r\n  \r\nexport interface TripDto {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    price: number;\r\n    rating: number;\r\n    nrOfRatings: number;\r\n    verticalType: VerticalType;\r\n    tags: string[];\r\n    co2: number;\r\n    thumbnailUrl: string;\r\n    imageUrl: string;\r\n    creationDate: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TripDto[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PersistedItem",
            "id": "interface-PersistedItem-958150055dab28602bcaf83515e0b30c192c801cb400f06222390cdfcb1411ad918fbae9323770d0e8a4918d65066b2a3236cf7ffda970d793e9c7678ed0ce34",
            "file": "src/app/interfaces/persistance.inferface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PersistedItem {\r\n    value: string;\r\n    expiration: Date;\r\n  }",
            "properties": [
                {
                    "name": "expiration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TripDef",
            "id": "interface-TripDef-dc729178cc991f97d91abe69aa2993939d5d7d8ca8cdb960e52bad7671eb421769d71456b38f7e4e8a0da713c0cd3fb5b75a644a26eadfa7d35d6dd6cfe0161a",
            "file": "src/app/interfaces/trip-def.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VerticalType } from '@app/enum/vertical-type.enum';\r\n\r\nexport interface ListOfTripsDef {\r\n  items: TripDef[];\r\n  limit: number;\r\n  page: number;\r\n  total: number;\r\n}\r\n\r\nexport interface TripDef {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  price: number;\r\n  rating: number;\r\n  numberOfRatings: number;\r\n  verticalType: VerticalType;\r\n  tags: string[];\r\n  co2Emission: number;\r\n  thumbnailUrl: string;\r\n  imageUrl: string;\r\n  creationDate: Date;\r\n  score?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "co2Emission",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "creationDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "numberOfRatings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "score",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "thumbnailUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "verticalType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VerticalType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TripDto",
            "id": "interface-TripDto-7bcf952807831894d93024672d909a5cfc14d310ba5acebc4ed1ade1069fa5734842147388f243a4701839c4cb500116d496453acc2b462efe4fc9ebe87be186",
            "file": "src/app/interfaces/trip-dto.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VerticalType } from '@app/enum/vertical-type.enum';\r\n\r\nexport interface ListOfTripsDto {\r\n    items: TripDto[];\r\n    limit: number;\r\n    page: number;\r\n    total: number;\r\n}\r\n  \r\nexport interface TripDto {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    price: number;\r\n    rating: number;\r\n    nrOfRatings: number;\r\n    verticalType: VerticalType;\r\n    tags: string[];\r\n    co2: number;\r\n    thumbnailUrl: string;\r\n    imageUrl: string;\r\n    creationDate: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "co2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "creationDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "nrOfRatings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "thumbnailUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "verticalType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VerticalType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TripsFilter",
            "id": "interface-TripsFilter-8641dcc0fc0c52ca9731c88261ec2999560a0014866aeec4989db328d26d9e75f67ee255a32916118cfdf19f939df8a6fa43f051d4a21754daabc08df967fbe0",
            "file": "src/app/interfaces/trips-filter.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TripsPagination {\r\n    pageNumber: number;\r\n    pageSize: number;\r\n    sortProperty: TripsFilterSortProperty;\r\n    sortDescending: boolean;\r\n    filter?: TripsFilter;\r\n  }\r\n  \r\n  export interface TripsFilter {\r\n    title?: string;\r\n    minimumPrice?: number;\r\n    maximumPrice?: number;\r\n    minimumRating?: number;\r\n    tags?: string[];\r\n  }\r\n  \r\n  export enum TripsFilterSortProperty {\r\n    title = 'title',\r\n    price = 'price',\r\n    rating = 'rating',\r\n    creationDate = 'creationDate',\r\n    verticalType = 'verticalType'\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "maximumPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "minimumPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "minimumRating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TripsPagination",
            "id": "interface-TripsPagination-8641dcc0fc0c52ca9731c88261ec2999560a0014866aeec4989db328d26d9e75f67ee255a32916118cfdf19f939df8a6fa43f051d4a21754daabc08df967fbe0",
            "file": "src/app/interfaces/trips-filter.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TripsPagination {\r\n    pageNumber: number;\r\n    pageSize: number;\r\n    sortProperty: TripsFilterSortProperty;\r\n    sortDescending: boolean;\r\n    filter?: TripsFilter;\r\n  }\r\n  \r\n  export interface TripsFilter {\r\n    title?: string;\r\n    minimumPrice?: number;\r\n    maximumPrice?: number;\r\n    minimumRating?: number;\r\n    tags?: string[];\r\n  }\r\n  \r\n  export enum TripsFilterSortProperty {\r\n    title = 'title',\r\n    price = 'price',\r\n    rating = 'rating',\r\n    creationDate = 'creationDate',\r\n    verticalType = 'verticalType'\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TripsFilter",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "pageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "sortDescending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sortProperty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TripsFilterSortProperty",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AppEffects",
            "id": "injectable-AppEffects-a7b851bcf898af8a51981e7325b9c045dd88db21bedd163dedac2cd2cefa5232ff625f5adccc66ef345b05e02e4ecd56abb4ac7b8273a3cc459c37a8dd097bac",
            "file": "src/app/store/app.effects.ts",
            "properties": [
                {
                    "name": "loadListOfTrips$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.loadListOfTripsRequest),\r\n        withLatestFrom(this.appFacade.listOfTripsPagination$()),\r\n        switchMap(([_, pagination]) =>\r\n          this.tripsDataService.getTrips$(pagination).pipe(\r\n            map((trips) =>\r\n              AppActions.loadListOfTripsSuccess({\r\n                items: trips.items,\r\n                itemsNumber: trips.total,\r\n              }),\r\n            ),\r\n            catchError(() => of(AppActions.loadListOfTripsFailure())),\r\n          ),\r\n        ),\r\n      ),\r\n    { dispatch: true },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "loadTripDetails$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.loadTripDetailsRequest),\r\n        switchMap((action) =>\r\n          this.tripsDataService.getTripById$(action.itemId).pipe(\r\n            map((trip) => AppActions.loadTripDetailsSuccess({ item: trip })),\r\n            catchError(() => of(AppActions.loadTripDetailsFailure())),\r\n          ),\r\n        ),\r\n      ),\r\n    { dispatch: true },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "loadTripOfTheDay$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.loadTripOfTheDayRequest),\r\n        switchMap((_) => {\r\n          const tripOfTheDayId = this.persistanceService.retrieveTripId();\r\n\r\n          return (\r\n            tripOfTheDayId\r\n              ? this.tripsDataService.getTripById$(tripOfTheDayId)\r\n              : this.tripsDataService.getTripOfTheDay$()\r\n          ).pipe(\r\n            map((trip) => AppActions.loadTripOfTheDaySuccess({ item: trip })),\r\n            tap(\r\n              (trip) =>\r\n                !tripOfTheDayId &&\r\n                this.persistanceService.persistTripId(trip.item.id),\r\n            ),\r\n            catchError(() => of(AppActions.loadTripOfTheDayFailure())),\r\n          );\r\n        }),\r\n      ),\r\n    { dispatch: true },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "setListOfTripsPagination$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.setListOfTripsPagination),\r\n        map((_) => AppActions.loadListOfTripsRequest()),\r\n      ),\r\n    { dispatch: true },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  map,\r\n  switchMap,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\n\r\nimport * as AppActions from '@app/store/app.actions';\r\nimport { AppFacade } from '@app/store/app.facade';\r\nimport { TripsDataService } from '@app/services/trips-data.service';\r\nimport { PersistanceService } from '@app/services/persistance.service';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n  setListOfTripsPagination$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.setListOfTripsPagination),\r\n        map((_) => AppActions.loadListOfTripsRequest()),\r\n      ),\r\n    { dispatch: true },\r\n  );\r\n\r\n  loadListOfTrips$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.loadListOfTripsRequest),\r\n        withLatestFrom(this.appFacade.listOfTripsPagination$()),\r\n        switchMap(([_, pagination]) =>\r\n          this.tripsDataService.getTrips$(pagination).pipe(\r\n            map((trips) =>\r\n              AppActions.loadListOfTripsSuccess({\r\n                items: trips.items,\r\n                itemsNumber: trips.total,\r\n              }),\r\n            ),\r\n            catchError(() => of(AppActions.loadListOfTripsFailure())),\r\n          ),\r\n        ),\r\n      ),\r\n    { dispatch: true },\r\n  );\r\n\r\n  loadTripDetails$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.loadTripDetailsRequest),\r\n        switchMap((action) =>\r\n          this.tripsDataService.getTripById$(action.itemId).pipe(\r\n            map((trip) => AppActions.loadTripDetailsSuccess({ item: trip })),\r\n            catchError(() => of(AppActions.loadTripDetailsFailure())),\r\n          ),\r\n        ),\r\n      ),\r\n    { dispatch: true },\r\n  );\r\n\r\n  loadTripOfTheDay$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AppActions.loadTripOfTheDayRequest),\r\n        switchMap((_) => {\r\n          const tripOfTheDayId = this.persistanceService.retrieveTripId();\r\n\r\n          return (\r\n            tripOfTheDayId\r\n              ? this.tripsDataService.getTripById$(tripOfTheDayId)\r\n              : this.tripsDataService.getTripOfTheDay$()\r\n          ).pipe(\r\n            map((trip) => AppActions.loadTripOfTheDaySuccess({ item: trip })),\r\n            tap(\r\n              (trip) =>\r\n                !tripOfTheDayId &&\r\n                this.persistanceService.persistTripId(trip.item.id),\r\n            ),\r\n            catchError(() => of(AppActions.loadTripOfTheDayFailure())),\r\n          );\r\n        }),\r\n      ),\r\n    { dispatch: true },\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private appFacade: AppFacade,\r\n    private tripsDataService: TripsDataService,\r\n    private persistanceService: PersistanceService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appFacade",
                        "type": "AppFacade",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tripsDataService",
                        "type": "TripsDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 85,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appFacade",
                        "type": "AppFacade",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tripsDataService",
                        "type": "TripsDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AppFacade",
            "id": "injectable-AppFacade-0e36468bd9d28c6bbe517754d0337d963131b215203b05d05ecf21d60d4bb5eae55ef862337ffc5f1741bad84c40e77f76dbd445b6f76a4120cc85ab96105622",
            "file": "src/app/store/app.facade.ts",
            "properties": [],
            "methods": [
                {
                    "name": "fetchListOfTrips",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchTripDetails",
                    "args": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchTripOfTheDay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listOfTrips$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TripDef[]>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listOfTripsHasError$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listOfTripsIsLoading$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listOfTripsNumber$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listOfTripsPagination$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TripsPagination | undefined>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectedTrip$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TripDef | undefined>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectedTripHasError$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectedTripLoading$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setListOfTripsPagination",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "Partial<TripsPagination>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "forceFilter",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "Partial<TripsPagination>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "forceFilter",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tripOfTheDayHasErrorError$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "tripOfTheDayIsLoading$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "tripOfTheDayItem$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TripDef | undefined>",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AppState } from '@app/store/app.state';\r\nimport { TripDef } from '@app/interfaces/trip-def.interface';\r\nimport * as AppActions from '@app/store/app.actions';\r\nimport * as AppSelectors from '@app/store/app.selectors';\r\nimport { TripsPagination } from '@app/interfaces/trips-filter.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppFacade {\r\n  setListOfTripsPagination(\r\n    pagination: Partial<TripsPagination>,\r\n    forceFilter: boolean,\r\n  ): void {\r\n    this.store$.dispatch(\r\n      AppActions.setListOfTripsPagination({ pagination, forceFilter }),\r\n    );\r\n  }\r\n\r\n  fetchListOfTrips(): void {\r\n    this.store$.dispatch(AppActions.loadListOfTripsRequest());\r\n  }\r\n\r\n  listOfTrips$(): Observable<TripDef[]> {\r\n    return this.store$.select(AppSelectors.selectListOfTripsItems);\r\n  }\r\n\r\n  listOfTripsNumber$(): Observable<number> {\r\n    return this.store$.select(AppSelectors.selectListOfTripsItemsNumber);\r\n  }\r\n\r\n  listOfTripsPagination$(): Observable<TripsPagination | undefined> {\r\n    return this.store$.select(AppSelectors.selectListOfTripsPagination);\r\n  }\r\n\r\n  listOfTripsIsLoading$(): Observable<boolean> {\r\n    return this.store$.select(AppSelectors.selectListOfTripsIsLoading);\r\n  }\r\n\r\n  listOfTripsHasError$(): Observable<boolean> {\r\n    return this.store$.select(AppSelectors.selectListOfTripsHasError);\r\n  }\r\n\r\n  fetchTripDetails(tripId: string): void {\r\n    this.store$.dispatch(AppActions.loadTripDetailsRequest({ itemId: tripId }));\r\n  }\r\n\r\n  selectedTrip$(): Observable<TripDef | undefined> {\r\n    return this.store$.select(AppSelectors.selectedTripItem);\r\n  }\r\n\r\n  selectedTripLoading$(): Observable<boolean> {\r\n    return this.store$.select(AppSelectors.selectedTripIsLoading);\r\n  }\r\n\r\n  selectedTripHasError$(): Observable<boolean> {\r\n    return this.store$.select(AppSelectors.selectedTripHasError);\r\n  }\r\n\r\n  fetchTripOfTheDay(): void {\r\n    this.store$.dispatch(AppActions.loadTripOfTheDayRequest());\r\n  }\r\n\r\n  tripOfTheDayItem$(): Observable<TripDef | undefined> {\r\n    return this.store$.select(AppSelectors.tripOfTheDayItem);\r\n  }\r\n\r\n  tripOfTheDayIsLoading$(): Observable<boolean> {\r\n    return this.store$.select(AppSelectors.tripOfTheDayIsLoading);\r\n  }\r\n\r\n  tripOfTheDayHasErrorError$(): Observable<boolean> {\r\n    return this.store$.select(AppSelectors.tripOfTheDayHasError);\r\n  }\r\n\r\n  constructor(private store$: Store<AppState>) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store$",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 78,
                "jsdoctags": [
                    {
                        "name": "store$",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "PersistanceService",
            "id": "injectable-PersistanceService-af8eec4a8947ee92bbd3591acce19069bd64e472664ef1776086e0d055affdf71eada2babc31ca93317d6ac2ca5d6146c614d61d53f84f823dde2a064fc1c74d",
            "file": "src/app/services/persistance.service.ts",
            "properties": [
                {
                    "name": "persistedIdKey",
                    "defaultValue": "'persisted_item'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "persistTripId",
                    "args": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveTripId",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { PersistedItem } from '@app/interfaces/persistance.inferface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PersistanceService {\r\n  private readonly persistedIdKey = 'persisted_item';\r\n\r\n  persistTripId(tripId: string): void {\r\n    const now = new Date();\r\n    const expirationTime = new Date(\r\n      now.getFullYear(),\r\n      now.getMonth(),\r\n      now.getDate(),\r\n      23,\r\n      59,\r\n      59,\r\n      999,\r\n    );\r\n\r\n    const item: PersistedItem = {\r\n      value: tripId,\r\n      expiration: expirationTime,\r\n    };\r\n\r\n    localStorage.setItem(this.persistedIdKey, JSON.stringify(item));\r\n  }\r\n\r\n  retrieveTripId(): string | null {\r\n    const persistedValue = localStorage.getItem(this.persistedIdKey);\r\n\r\n    const item: PersistedItem = persistedValue && JSON.parse(persistedValue);\r\n\r\n    return item && new Date(item.expiration) > new Date() ? item.value : null;\r\n  }\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TripsDataService",
            "id": "injectable-TripsDataService-448bbc6511434956aaff47d45c4436e8fd894ba7e21d38ec32ec11e3d375f008d356cb1057cadd4b4b4a26de60cdc8a132862c65e309599fa5309807912f456f",
            "file": "src/app/services/trips-data.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTripById$",
                    "args": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TripDef>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTripOfTheDay$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TripDef>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTrips$",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "TripsPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ListOfTripsDef>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "TripsPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\n\r\nimport { ApiEndpointUrls } from '@app/constants/api-endpoint-urls.constant';\r\nimport { ListOfTripsDef, TripDef } from '@app/interfaces/trip-def.interface';\r\nimport { ListOfTripsDto, TripDto } from '@app/interfaces/trip-dto.interface';\r\nimport { TripsMapperService } from '@app/services/trips-mapper.service';\r\nimport { environment } from '@environments/environment';\r\nimport { TripsPagination } from '@app/interfaces/trips-filter.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TripsDataService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getTrips$(pagination?: TripsPagination): Observable<ListOfTripsDef> {\r\n    return this.httpClient\r\n      .get<ListOfTripsDto>(environment.apiUrl + ApiEndpointUrls.TRIPS, {\r\n        params: pagination && TripsMapperService.mapTripsPagination(pagination),\r\n      })\r\n      .pipe(\r\n        map((listOfTrips) => TripsMapperService.mapListOfTripsDto(listOfTrips)),\r\n      );\r\n  }\r\n\r\n  getTripById$(tripId: string): Observable<TripDef> {\r\n    return this.httpClient\r\n      .get<TripDto>(\r\n        environment.apiUrl + ApiEndpointUrls.TRIP.replace('{id}', tripId),\r\n      )\r\n      .pipe(map((trip) => TripsMapperService.mapTripDto(trip)));\r\n  }\r\n\r\n  getTripOfTheDay$(): Observable<TripDef> {\r\n    return this.httpClient\r\n      .get<TripDto>(environment.apiUrl + ApiEndpointUrls.TRIP_OF_THE_DAY)\r\n      .pipe(map((trip) => TripsMapperService.mapTripDto(trip)));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "TripsMapperService",
            "id": "class-TripsMapperService-e7128cb83270bf79df6d61fdc53b4d57d5ae7e2dbfa5425d022145551557ad8dce653aeda12bb3c780ec30fed6d48d621756fd3c1d43b36426d7ccb925a68916",
            "file": "src/app/services/trips-mapper.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpParams } from '@angular/common/http';\r\nimport { ListOfTripsDef, TripDef } from '@app/interfaces/trip-def.interface';\r\nimport { ListOfTripsDto, TripDto } from '@app/interfaces/trip-dto.interface';\r\nimport {\r\n  TripsFilterSortProperty,\r\n  TripsPagination,\r\n} from '@app/interfaces/trips-filter.interface';\r\nimport { TripsScoreService } from './trips-score.service';\r\n\r\nexport class TripsMapperService {\r\n  static mapListOfTripsDto(dto: ListOfTripsDto): ListOfTripsDef {\r\n    return {\r\n      items:\r\n        dto.items?.map((trip) => TripsMapperService.mapTripDto(trip)) ?? [],\r\n      limit: dto.limit,\r\n      page: dto.page,\r\n      total: dto.total,\r\n    };\r\n  }\r\n\r\n  static mapTripDto(dto: TripDto): TripDef {\r\n    return {\r\n      id: dto.id,\r\n      title: dto.title,\r\n      description: dto.description,\r\n      price: dto.price,\r\n      rating: dto.rating,\r\n      numberOfRatings: dto.nrOfRatings,\r\n      verticalType: dto.verticalType,\r\n      tags: dto.tags.map((tag) => tag),\r\n      co2Emission: dto.co2,\r\n      thumbnailUrl: dto.thumbnailUrl,\r\n      imageUrl: dto.imageUrl,\r\n      creationDate: new Date(dto.creationDate),\r\n      score: TripsScoreService.calculateScore(dto.rating, dto.nrOfRatings, dto.co2),\r\n    };\r\n  }\r\n\r\n  static mapTripsPagination(pagination: TripsPagination): HttpParams {\r\n    let httpParams = new HttpParams();\r\n\r\n    httpParams = httpParams.set('page', pagination.pageNumber);\r\n    httpParams = httpParams.set('limit', pagination.pageSize);\r\n\r\n    if (pagination.sortProperty !== undefined) {\r\n      httpParams = httpParams.set(\r\n        'sortBy',\r\n        TripsMapperService.mapTripsFilterSortProperty(pagination.sortProperty),\r\n      );\r\n    }\r\n    if (pagination.sortDescending !== undefined) {\r\n      httpParams = httpParams.set(\r\n        'sortOrder',\r\n        pagination.sortDescending ? 'DESC' : 'ASC',\r\n      );\r\n    }\r\n\r\n    if (pagination.filter) {\r\n      const filter = pagination.filter;\r\n\r\n      if (filter.title) {\r\n        httpParams = httpParams.set('titleFilter', filter.title);\r\n      }\r\n      if (filter.minimumPrice !== undefined) {\r\n        httpParams = httpParams.set('minPrice', filter.minimumPrice);\r\n      }\r\n      if (filter.maximumPrice !== undefined) {\r\n        httpParams = httpParams.set('maxPrice', filter.maximumPrice);\r\n      }\r\n      if (filter.minimumRating !== undefined) {\r\n        httpParams = httpParams.set('minRating', filter.minimumRating);\r\n      }\r\n      if (filter.tags && filter.tags.length > 0) {\r\n        httpParams = httpParams.set(\r\n          'tags',\r\n          filter.tags.map((tag) => encodeURIComponent(tag)).join(','),\r\n        );\r\n      }\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  private static mapTripsFilterSortProperty(\r\n    property: TripsFilterSortProperty,\r\n  ): string {\r\n    switch (property) {\r\n      case TripsFilterSortProperty.creationDate:\r\n        return 'creationDate';\r\n      case TripsFilterSortProperty.price:\r\n        return 'price';\r\n      case TripsFilterSortProperty.rating:\r\n        return 'rating';\r\n      case TripsFilterSortProperty.title:\r\n        return 'title';\r\n      case TripsFilterSortProperty.verticalType:\r\n        return 'verticalType';\r\n    }\r\n  }\r\n}\r\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "mapListOfTripsDto",
                    "args": [
                        {
                            "name": "dto",
                            "type": "ListOfTripsDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ListOfTripsDef",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "ListOfTripsDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapTripDto",
                    "args": [
                        {
                            "name": "dto",
                            "type": "TripDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TripDef",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "TripDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapTripsFilterSortProperty",
                    "args": [
                        {
                            "name": "property",
                            "type": "TripsFilterSortProperty",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "property",
                            "type": "TripsFilterSortProperty",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapTripsPagination",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "TripsPagination",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HttpParams",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "TripsPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TripsScoreService",
            "id": "class-TripsScoreService-34b7a176027b24de3f48f96ddf1bf4f596ca6017c30f37f82cbd504325b2573c5a3f673c3ed2acfb870307d627564f4c1a8eee28667f1df236e34d0a5fbb1862",
            "file": "src/app/services/trips-score.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class TripsScoreService {\r\n    static calculateScore(\r\n        rating: number,\r\n        numberOfRatings: number,\r\n        co2Emission: number,\r\n      ): number {\r\n        return Math.floor(\r\n          ((15 + rating * numberOfRatings) / (5 + numberOfRatings) -\r\n            co2Emission / 1000) /\r\n            2,\r\n        );\r\n      }\r\n\r\n      static getSeverity(rating: number): 'success' | 'secondary' | 'info' | 'warn' | 'danger' | 'contrast' | undefined {\r\n        return rating > 1 ? 'success' : rating > 0 ? 'warn' : 'secondary';\r\n      }\r\n    \r\n      static getScoreTranslationKey(rating: number): string {\r\n        return rating > 1 ? 'content.score-values.awesome' : rating > 0 ? 'content.score-values.good' : 'content.score-values.average';\r\n      }\r\n}",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "calculateScore",
                    "args": [
                        {
                            "name": "rating",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "numberOfRatings",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "co2Emission",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "rating",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "numberOfRatings",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "co2Emission",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getScoreTranslationKey",
                    "args": [
                        {
                            "name": "rating",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "rating",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSeverity",
                    "args": [
                        {
                            "name": "rating",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"success\" | \"secondary\" | \"info\" | \"warn\" | \"danger\" | \"contrast\" | undefined",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "rating",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3d6a44de26b004a3e42ab69db5368e93ab4b5dd34f1b6825477d34ad7e95a4545a3a2e6dcff5ea2af4be32a7993519310742cd83a0fd760e81d1366a69c5505c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: LOCALE_ID, useValue: environment.locale ??  }",
                    "ns": "{ provide: LOCALE_ID, useValue: environment"
                }
            ],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { Component, LOCALE_ID } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from '@environments/environment';\r\nimport localeIt from '@angular/common/locales/it';\r\n\r\nif (environment.locale === 'it-IT') {\r\n  registerLocaleData(localeIt);\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [CommonModule, RouterOutlet],\r\n  providers: [{ provide: LOCALE_ID, useValue: environment.locale ?? 'en-US' }],\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n  constructor(private translate: TranslateService) {\r\n    this.translate.addLangs(['en', 'it']);\r\n    this.translate.setDefaultLang(environment.locale === 'it-IT' ? 'it' : 'en');\r\n    this.translate.use(environment.locale === 'it-IT' ? 'it' : 'en');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ListOfTripsComponent",
            "id": "component-ListOfTripsComponent-9fcd26a56f8efa7ddd5bbcbb846ad4c38f91ceb088bb8bb9841595d4a91943dccf7cc1d257f8806ccf83aa54d61476998afa6d58803e1e986aebf6fb121c5a9b",
            "file": "src/app/components/list-of-trips/list-of-trips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list-of-trips",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-of-trips.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultTripsPagination",
                    "defaultValue": "initialState.listOfTrips.pagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "listOfTrips$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TripDef[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "listOfTripsHasError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "listOfTripsIsLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "listOfTripsNumber$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "tripOfTheDay$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TripDef | undefined>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "tripOfTheDayHasError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "tripOfTheDayIsLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "tripsPagination$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TripsPagination | undefined>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "onFilterChange",
                    "args": [
                        {
                            "name": "filter",
                            "type": "TripsFilter | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "TripsFilter | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPaginationChange",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "TripsPagination",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "TripsPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRequestTrip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "TableModule",
                    "type": "module"
                },
                {
                    "name": "ListOfTripsTableComponent",
                    "type": "component"
                },
                {
                    "name": "ListOfTripsFilterComponent",
                    "type": "component"
                },
                {
                    "name": "TripOfTheDayComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { TripDef } from '@app/interfaces/trip-def.interface';\r\nimport { AppFacade } from '@app/store/app.facade';\r\n\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TableModule } from 'primeng/table';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TripsFilter, TripsPagination } from '@app/interfaces/trips-filter.interface';\r\nimport { ListOfTripsTableComponent } from '@app/components/list-of-trips/list-of-trips-table/list-of-trips-table.component';\r\nimport { initialState } from '@app/store/app.state';\r\nimport { ListOfTripsFilterComponent } from '@app/components/list-of-trips/list-of-trips-filter/list-of-trips-filter.component';\r\nimport { TripOfTheDayComponent } from '@app/components/list-of-trips/trip-of-the-day/trip-of-the-day.component';\r\n\r\n@Component({\r\n  selector: 'app-list-of-trips',\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    ListOfTripsTableComponent,\r\n    ListOfTripsFilterComponent,\r\n    TripOfTheDayComponent\r\n],\r\n  providers: [],\r\n  templateUrl: './list-of-trips.component.html',\r\n})\r\nexport class ListOfTripsComponent {\r\n  readonly defaultTripsPagination = initialState.listOfTrips.pagination;\r\n\r\n  listOfTrips$: Observable<TripDef[]>;\r\n  tripsPagination$: Observable<TripsPagination | undefined>;\r\n  listOfTripsNumber$: Observable<number>;\r\n  listOfTripsIsLoading$: Observable<boolean>;\r\n  listOfTripsHasError$: Observable<boolean>;\r\n\r\n  tripOfTheDay$: Observable<TripDef | undefined>;\r\n  tripOfTheDayIsLoading$: Observable<boolean>;\r\n  tripOfTheDayHasError$: Observable<boolean>;\r\n\r\n  constructor(private appFacade: AppFacade) {\r\n    this.listOfTrips$ = this.appFacade.listOfTrips$();\r\n    this.tripsPagination$ = this.appFacade.listOfTripsPagination$();\r\n    this.listOfTripsNumber$ = this.appFacade.listOfTripsNumber$();\r\n    this.listOfTripsIsLoading$ = this.appFacade.listOfTripsIsLoading$();\r\n    this.listOfTripsHasError$ = this.appFacade.listOfTripsHasError$();\r\n\r\n    this.tripOfTheDay$ = this.appFacade.tripOfTheDayItem$();\r\n    this.tripOfTheDayIsLoading$ = this.appFacade.tripOfTheDayIsLoading$();\r\n    this.tripOfTheDayHasError$ = this.appFacade.tripOfTheDayHasErrorError$();\r\n  }\r\n\r\n  onRequestTrip(): void {\r\n    this.appFacade.fetchTripOfTheDay();\r\n  }\r\n\r\n  onFilterChange(filter: TripsFilter | null): void {\r\n    const filteredFilter = filter ?Object.keys(filter)\r\n      .filter(key => filter[key as keyof TripsFilter] != null && filter[key as keyof TripsFilter] !== '')\r\n      .reduce((acc, key) => ({ ...acc, [key]: filter[key as keyof TripsFilter] }), {}) : {};\r\n\r\n      this.appFacade.setListOfTripsPagination({ filter: filteredFilter }, true);\r\n  }\r\n\r\n  onPaginationChange(pagination: TripsPagination): void {\r\n    this.appFacade.setListOfTripsPagination(pagination, false);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "appFacade",
                        "type": "AppFacade",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "appFacade",
                        "type": "AppFacade",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<app-trip-of-the-day\r\n    [trip]=\"(tripOfTheDay$ | async) ?? null\"\r\n    [loading]=\"(tripOfTheDayIsLoading$ | async) ?? false\"\r\n    [hasError]=\"(tripOfTheDayHasError$ | async) ?? false\"\r\n    (requestTrip)=\"onRequestTrip()\"\r\n></app-trip-of-the-day>\r\n<app-list-of-trips-filter\r\n    [filter]=\"(tripsPagination$ | async)?.filter ?? {}\"\r\n    (filterChange)=\"onFilterChange($event)\"\r\n></app-list-of-trips-filter>\r\n<app-list-of-trips-table\r\n    [listOfTrips]=\"(listOfTrips$ | async) ?? []\"\r\n    [pagination]=\"(tripsPagination$ | async) ?? defaultTripsPagination\"\r\n    [loading]=\"(listOfTripsIsLoading$ | async) ?? false\"\r\n    [hasError]=\"(listOfTripsHasError$ | async) ?? false\"\r\n    [listOfTripsNumber]=\" (listOfTripsNumber$ | async) ?? 0\"\r\n    (paginationChange)=\"onPaginationChange($event)\"\r\n></app-list-of-trips-table>"
        },
        {
            "name": "ListOfTripsFilterComponent",
            "id": "component-ListOfTripsFilterComponent-d155894feb8ce05e1d9fa36a7068dfae9f4cfd27dfe6180dcf47a49bbe3f4b339c5ffd6d8f2c4952fe6ff163ef0219d7a3d8187914d92d7786e855e0310ae71d",
            "file": "src/app/components/list-of-trips/list-of-trips-filter/list-of-trips-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list-of-trips-filter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-of-trips-filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "TripsFilter",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filterChange",
                    "defaultValue": "new EventEmitter<TripsFilter | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<TripsFilter | null>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "filterForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "numberPattern",
                    "defaultValue": "'^[0-9.]+$'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "InputTextModule",
                    "type": "module"
                },
                {
                    "name": "FloatLabelModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\nimport { TripsFilter } from '@app/interfaces/trips-filter.interface';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FloatLabelModule } from 'primeng/floatlabel';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-list-of-trips-filter',\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    ReactiveFormsModule,\r\n    InputTextModule,\r\n    FloatLabelModule,\r\n    TranslateModule,\r\n  ],\r\n  templateUrl: './list-of-trips-filter.component.html',\r\n})\r\nexport class ListOfTripsFilterComponent implements OnChanges {\r\n  @Input() filter!: TripsFilter;\r\n  @Output() filterChange: EventEmitter<TripsFilter | null> =\r\n    new EventEmitter<TripsFilter | null>();\r\n\r\n  filterForm!: FormGroup;\r\n\r\n  ngOnChanges(): void {\r\n    this.filterForm = new FormGroup({\r\n      title: new FormControl(this.filter?.title || ''),\r\n      minimumPrice: new FormControl(this.filter?.minimumPrice || null, [\r\n        Validators.min(0),\r\n        Validators.pattern(this.numberPattern),\r\n      ]),\r\n      maximumPrice: new FormControl(this.filter?.maximumPrice || null, [\r\n        Validators.min(0),\r\n        Validators.pattern(this.numberPattern),\r\n      ]),\r\n      minimumRating: new FormControl(this.filter?.minimumRating || null, [\r\n        Validators.min(0),\r\n        Validators.max(5),\r\n        Validators.pattern(this.numberPattern),\r\n      ]),\r\n      tags: new FormControl(this.filter?.tags || []),\r\n    });\r\n  }\r\n\r\n  submit(): void {\r\n    this.filterForm.valid &&\r\n      this.filterChange.emit({\r\n        ...this.filterForm.value,\r\n        tags: this.filterForm.value.tags\r\n          ? [this.filterForm.value.tags.toString().split(/[\\s.,;-]+/)]\r\n          : null,\r\n      });\r\n  }\r\n\r\n  reset(): void {\r\n    this.filterChange.emit(null);\r\n  }\r\n\r\n  private readonly numberPattern = '^[0-9.]+$';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<form [formGroup]=\"filterForm\" (submit)=\"submit()\" class=\"flex flex-wrap gap-4 items-center justify-center bg-gray-100 p-2\">\r\n    <p-floatlabel variant=\"in\">\r\n        <input pInputText id=\"in_title\" pSize=\"small\" formControlName=\"title\" autocomplete=\"off\" />\r\n        <label for=\"in_title\">{{ 'content.title' | translate }}</label>\r\n    </p-floatlabel>\r\n    <p-floatlabel variant=\"in\">\r\n        <input pInputText id=\"in_minimumRating\" pSize=\"small\" formControlName=\"minimumRating\" autocomplete=\"off\" />\r\n        <label for=\"in_minimumRating\">{{ 'content.minimum-rating' | translate }}</label>\r\n    </p-floatlabel>\r\n    <p-floatlabel variant=\"in\">\r\n        <input pInputText id=\"in_minimumPrice\" pSize=\"small\" formControlName=\"minimumPrice\" autocomplete=\"off\" />\r\n        <label for=\"in_minimumPrice\">{{ 'content.minimum-price' | translate }}</label>\r\n    </p-floatlabel>\r\n    <p-floatlabel variant=\"in\">\r\n        <input pInputText id=\"in_maximumPrice\" pSize=\"small\" formControlName=\"maximumPrice\" autocomplete=\"off\" />\r\n        <label for=\"in_maximumPrice\">{{ 'content.maximum-price' | translate }}</label>\r\n    </p-floatlabel>\r\n    <div class=\"flex flex-wrap gap-4 items-center justify-center\">\r\n        <p-button type=\"submit\" label=\"{{ 'content.apply' | translate }}\" severity=\"success\" />\r\n        <p-button label=\"{{ 'content.reset' | translate }}\" severity=\"warn\"(click)=\"reset()\" />\r\n    </div>\r\n</form>\r\n"
        },
        {
            "name": "ListOfTripsTableComponent",
            "id": "component-ListOfTripsTableComponent-56707efb87e1b6a82b76ce0f3d85cc0703c8dc8791c329721312c956b3d018b9e212f1bcbe6cf2b32f5e2a298f76904efbae59308c286f68bfcf52d204e685e3",
            "file": "src/app/components/list-of-trips/list-of-trips-table/list-of-trips-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "app-list-of-trips-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-of-trips-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "listOfTrips",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "TripDef[]",
                    "decorators": []
                },
                {
                    "name": "listOfTripsNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "TripsPagination",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "paginationChange",
                    "defaultValue": "new EventEmitter<TripsPagination>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter<TripsPagination>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "getScoreTranslationKey",
                    "defaultValue": "TripsScoreService.getScoreTranslationKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "getSeverity",
                    "defaultValue": "TripsScoreService.getSeverity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "getTripRoute",
                    "defaultValue": "buildTripRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "sortableColumns",
                    "defaultValue": "TripsFilterSortProperty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "verticalTypeTranslationKey",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90
                }
            ],
            "methodsClass": [
                {
                    "name": "lazyLoad",
                    "args": [
                        {
                            "name": "event",
                            "type": "TableLazyLoadEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "TableLazyLoadEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "TableModule",
                    "type": "module"
                },
                {
                    "name": "Rating"
                },
                {
                    "name": "Tag"
                },
                {
                    "name": "ToastModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "Co2Pipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TableLazyLoadEvent, TableModule } from 'primeng/table';\r\nimport { Rating } from 'primeng/rating';\r\nimport { Tag } from 'primeng/tag';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink } from '@angular/router';\r\nimport { VerticalType, VerticalTypeTranslationKeys } from '@app/enum/vertical-type.enum';\r\nimport { TripDef } from '@app/interfaces/trip-def.interface';\r\nimport {\r\n  TripsFilterSortProperty,\r\n  TripsPagination,\r\n} from '@app/interfaces/trips-filter.interface';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { Co2Pipe } from '@app/pipes/co2.pipe';\r\nimport { TripsScoreService } from '@app/services/trips-score.service';\r\nimport { buildTripRoute } from '@app/constants/app-routes.constant';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-list-of-trips-table',\r\n  imports: [\r\n    CommonModule,\r\n    RouterLink,\r\n    FormsModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    Rating,\r\n    Tag,\r\n    ToastModule,\r\n    TranslateModule,\r\n    Co2Pipe,\r\n  ],\r\n  providers: [MessageService],\r\n  templateUrl: './list-of-trips-table.component.html',\r\n})\r\nexport class ListOfTripsTableComponent implements OnChanges {\r\n  @Input() listOfTrips!: TripDef[];\r\n  @Input() pagination!: TripsPagination;\r\n  @Input() loading!: boolean;\r\n  @Input() hasError!: boolean;\r\n  @Input() listOfTripsNumber!: number;\r\n\r\n  @Output() paginationChange: EventEmitter<TripsPagination> =\r\n    new EventEmitter<TripsPagination>();\r\n\r\n  get tableFirst(): number {\r\n    return (this.pagination.pageNumber -1) * this.pagination.pageSize;\r\n  }\r\n\r\n  constructor(private messageService: MessageService, private translateService: TranslateService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['hasError']?.currentValue === true) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: this.translateService.instant('content.error'),\r\n        detail: this.translateService.instant('error.an-error-has-occurred-while-loading-trips'),\r\n        life: 5000,\r\n      });\r\n    }\r\n  }\r\n\r\n  lazyLoad(event: TableLazyLoadEvent) {\r\n    const pageSize = event.rows || this.pagination.pageSize;\r\n    const pageNumber = Math.floor((event.first || 0) / pageSize) + 1;\r\n    const sortProperty = event.sortField || TripsFilterSortProperty.title;\r\n\r\n    this.paginationChange.emit({\r\n      pageNumber: pageNumber,\r\n      pageSize: pageSize,\r\n      sortProperty: sortProperty as TripsFilterSortProperty,\r\n      sortDescending: event.sortOrder !== 1,\r\n    });\r\n  }\r\n\r\n  getTripRoute = buildTripRoute;\r\n  getSeverity = TripsScoreService.getSeverity;\r\n  getScoreTranslationKey = TripsScoreService.getScoreTranslationKey;\r\n  verticalTypeTranslationKey = (verticalType: VerticalType) => VerticalTypeTranslationKeys[verticalType];\r\n\r\n  readonly sortableColumns = TripsFilterSortProperty;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "accessors": {
                "tableFirst": {
                    "name": "tableFirst",
                    "getSignature": {
                        "name": "tableFirst",
                        "type": "number",
                        "returnType": "number",
                        "line": 57
                    }
                }
            },
            "templateData": "<p-table\r\n    [value]=\"listOfTrips\"\r\n    [lazy]=\"true\"\r\n    [paginator]=\"true\"\r\n    [loading]=\"loading\"\r\n    [rows]=\"listOfTrips.length\"\r\n    [first]=\"tableFirst\"\r\n    [totalRecords]=\"listOfTripsNumber\"\r\n    [rowsPerPageOptions]=\"[5, 10, 20]\"\r\n    [showCurrentPageReport]=\"true\"\r\n    [customSort]=\"true\"\r\n    [sortField]=\"pagination.sortProperty\"\r\n    [sortOrder]=\"pagination.sortDescending ? -1 : 1\"\r\n    [currentPageReportTemplate]=\"'content.table.page-report' | translate\"\r\n    selectionMode=\"single\"\r\n    (onLazyLoad)=\"lazyLoad($event)\"\r\n    >\r\n    <ng-template #header>\r\n        <tr>\r\n            <th [pSortableColumn]=\"sortableColumns.title\">{{ 'content.title' | translate }} <p-sortIcon [field]=\"sortableColumns.title\" /></th>\r\n            <th>{{ 'content.image' | translate }}</th>\r\n            <th [pSortableColumn]=\"sortableColumns.price\">{{ 'content.price' | translate }} <p-sortIcon [field]=\"sortableColumns.price\" /></th>\r\n            <th [pSortableColumn]=\"sortableColumns.verticalType\">{{ 'content.vertical-type' | translate }} <p-sortIcon [field]=\"sortableColumns.verticalType\" /></th>\r\n            <th [pSortableColumn]=\"sortableColumns.rating\">{{ 'content.rating' | translate }} <p-sortIcon [field]=\"sortableColumns.rating\" /></th>\r\n            <th>{{ 'content.emission' | translate }}</th>\r\n            <th [pSortableColumn]=\"sortableColumns.creationDate\">{{ 'content.created' | translate }} <p-sortIcon [field]=\"sortableColumns.creationDate\" /></th>\r\n            <th>{{ 'content.score' | translate }}</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #body let-trip>\r\n        <tr [routerLink]=\"getTripRoute(trip.id)\" class=\"cursor-pointer\">\r\n            <td>{{ trip.title }}</td>\r\n            <td>\r\n                <img\r\n                    height=\"48px\" width=\"48px\"\r\n                    [src]=\"trip.thumbnailUrl\"\r\n                    [alt]=\"trip.description\"\r\n                    class=\"w-24 rounded\"\r\n                />\r\n            </td>\r\n            <td>{{ trip.price | currency: 'USD' }}</td>\r\n            <td>{{ verticalTypeTranslationKey(trip.verticalType) | translate | titlecase }}</td>\r\n            <td><p-rating [(ngModel)]=\"trip.rating\" [readonly]=\"true\" [disabled]=\"true\" /></td>\r\n            <td>{{ trip.co2Emission | co2 }}</td>\r\n            <td>{{ trip.creationDate | date }}</td>\r\n            <td>\r\n                <p-tag [value]=\"getScoreTranslationKey(trip.score) | translate\" [severity]=\"getSeverity(trip.score)\" />\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<p-toast position=\"bottom-right\"></p-toast>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TripComponent",
            "id": "component-TripComponent-39180b67faa14d88bf0aec65640f257eb22ddecdecb023a3c26575ae2cb3d0b1d977e6691be81f6b460f61fa90f8861110daf3da30c7d854051e3cf139f67850",
            "file": "src/app/components/trip-detail/trip/trip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./trip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "TripDef | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "getScoreTranslationKey",
                    "defaultValue": "TripsScoreService.getScoreTranslationKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "getSeverity",
                    "defaultValue": "TripsScoreService.getSeverity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "verticalTypeTranslationKey",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "getFormattedTags",
                    "args": [
                        {
                            "name": "tags",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tags",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "Rating"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ProgressSpinner"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "Tag"
                },
                {
                    "name": "Co2Pipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Rating } from 'primeng/rating';\r\nimport { Co2Pipe } from \"../../../pipes/co2.pipe\";\r\nimport { TripDef } from '@app/interfaces/trip-def.interface';\r\nimport { Tag } from 'primeng/tag';\r\nimport { ProgressSpinner } from 'primeng/progressspinner';\r\nimport { TripsScoreService } from '@app/services/trips-score.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { VerticalType, VerticalTypeTranslationKeys } from '@app/enum/vertical-type.enum';\r\n\r\n@Component({\r\n  selector: 'app-trip',\r\n  imports: [\r\n    CommonModule,\r\n    Rating,\r\n    FormsModule,\r\n    ProgressSpinner,\r\n    TranslateModule,\r\n    Tag,\r\n    Co2Pipe\r\n],\r\n  templateUrl: './trip.component.html',\r\n})\r\nexport class TripComponent {\r\n  @Input() trip!: TripDef | null;\r\n  @Input() loading!: boolean;\r\n  @Input() hasError!: boolean;\r\n\r\n  getFormattedTags(tags: string[]): string {\r\n    return tags?.map(it=> `#${it}`).join(' ') ?? '-'\r\n  }\r\n\r\n  getSeverity = TripsScoreService.getSeverity;\r\n  getScoreTranslationKey = TripsScoreService.getScoreTranslationKey;\r\n  verticalTypeTranslationKey = (verticalType: VerticalType) => VerticalTypeTranslationKeys[verticalType];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (loading) {\r\n    <div class=\"fixed inset-0 flex justify-center items-center z-50\">\r\n        <p-progressSpinner styleClass=\"text-white\" [style]=\"{width: '50px', height: '50px'}\"></p-progressSpinner>\r\n    </div>\r\n}\r\n<div class=\"flex flex-col items-center justify-start min-h-screen bg-gray-100\">\r\n    <div class=\"max-w-7xl w-full px-6 py-12 sm:px-8\">\r\n        <div class=\"lg:flex lg:space-x-16\">\r\n            <div class=\"lg:w-1/3\">\r\n                @if (trip) {\r\n                    <img [alt]=\"trip.title\" class=\"rounded-lg shadow-xl w-full object-cover h-72 sm:h-96\" [src]=\"trip.imageUrl\" />\r\n                } @else if(hasError) {\r\n                    <div class=\"rounded-lg shadow-xl w-full object-cover h-72 sm:h-96 bg-red-300\"></div>\r\n                }\r\n            </div>\r\n\r\n            <div class=\"lg:w-2/3 space-y-6\">\r\n                @if (trip) {\r\n                    <div>\r\n                        <h2 class=\"flex items-center text-3xl font-bold text-gray-900 space-x-2\">\r\n                            <span>{{ trip.title }}</span> \r\n                            <p-tag *ngIf=\"trip.score != null\" [value]=\"getScoreTranslationKey(trip.score) | translate\" [severity]=\"getSeverity(trip.score)\" class=\"mt-1\" />\r\n                        </h2>\r\n                        <ul class=\"flex items-center list-none space-x-2\">\r\n                            <li class=\"text-primary\">{{ trip.rating | number: '1.1-1' }}</li>\r\n                            <li><p-rating [(ngModel)]=\"trip.rating\" [readonly]=\"true\" [disabled]=\"true\" /></li>\r\n                            <li>{{ 'content.number-votes' | translate: {count: trip.numberOfRatings} }}</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <p class=\"text-lg text-gray-700\">{{ trip.description }}</p>\r\n\r\n                    <ul class=\"mt-6 space-y-2 text-lg text-gray-800\">\r\n                        <li><strong>{{ 'content.price' | translate }}:</strong> {{ trip.price | currency: 'USD' }}</li>\r\n                        <li><strong>{{ 'content.vertical-type' | translate }}:</strong> {{ verticalTypeTranslationKey(trip.verticalType) | translate | titlecase }}</li>\r\n                        <li><strong>{{ 'content.emission' | translate }}:</strong> {{ trip.co2Emission | co2 }}</li>\r\n                        <li><strong>{{ 'content.tags' | translate }}:</strong> {{ getFormattedTags(trip.tags) }}</li>\r\n                        <li><strong>{{ 'content.created' | translate }}:</strong> {{ trip.creationDate | date }}</li>\r\n                    </ul>\r\n                } @else if(hasError) {\r\n                    <div>\r\n                        <h2 class=\"flex items-center text-3xl font-bold text-gray-900 space-x-2\">\r\n                            {{ 'error.we-cant-find-trip' | translate }}\r\n                        </h2>\r\n                    </div>\r\n                    <p class=\"text-lg text-gray-700\">{{ 'error.an-error-has-occurred' | translate }}</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "TripDetailComponent",
            "id": "component-TripDetailComponent-de2d0946812eb68851c7bb27463c9a8c5f5dc496ec08b0ec0e982e664f7eeb17054589796d75255fb18904fdcf2c4a70c9840beb6b22cc6bb3c698d1872f6464",
            "file": "src/app/components/trip-detail/trip-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trip-detail",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./trip-detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "trip$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TripDef | undefined>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "tripHasError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tripId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "tripIsLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "filterOnlyMatchingRequestId",
                    "args": [
                        {
                            "name": "trip",
                            "type": "TripDef | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TripDef | undefined",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "trip",
                            "type": "TripDef | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TripComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TripDef } from '@app/interfaces/trip-def.interface';\r\nimport { AppFacade } from '@app/store/app.facade';\r\nimport { map, Observable } from 'rxjs';\r\nimport { TripComponent } from '@app/components/trip-detail/trip/trip.component';\r\n\r\n@Component({\r\n  selector: 'app-trip-detail',\r\n  imports: [CommonModule, TripComponent],\r\n  templateUrl: './trip-detail.component.html',\r\n})\r\nexport class TripDetailComponent implements OnInit {\r\n  trip$: Observable<TripDef | undefined>;\r\n  tripIsLoading$: Observable<boolean>;\r\n  tripHasError$: Observable<boolean>;\r\n\r\n  tripId: string = '';\r\n\r\n  constructor (\r\n    private activatedRoute: ActivatedRoute,\r\n    private appFacade: AppFacade,\r\n  ) {\r\n    this.trip$ = appFacade.selectedTrip$().pipe(map(it => this.filterOnlyMatchingRequestId(it)));\r\n    this.tripIsLoading$ = appFacade.selectedTripLoading$();\r\n    this.tripHasError$ = appFacade.selectedTripHasError$();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tripId = this.activatedRoute.snapshot.paramMap.get('tripId') ?? '';\r\n    this.appFacade.fetchTripDetails(this.tripId);\r\n  }\r\n\r\n  private filterOnlyMatchingRequestId(trip: TripDef | undefined): TripDef | undefined {\r\n    return trip?.id == this.tripId ? trip : undefined\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appFacade",
                        "type": "AppFacade",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appFacade",
                        "type": "AppFacade",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-trip\r\n    [trip]=\"(trip$ | async) ?? null\"\r\n    [loading]=\"(tripIsLoading$ | async) ?? false\"\r\n    [hasError]=\"(tripHasError$ | async) ?? false\"\r\n></app-trip>"
        },
        {
            "name": "TripOfTheDayComponent",
            "id": "component-TripOfTheDayComponent-5a0c9d6e7b8bcfb4abcee59f3389acfa0c2067cf8533e2dfae2e796ebae6a445b1a8b4867732bc1cd82558d5aadfb12c37b98e7c00de18073ff7e9c711f35bff",
            "file": "src/app/components/list-of-trips/trip-of-the-day/trip-of-the-day.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trip-of-the-day",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./trip-of-the-day.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "TripDef | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "requestTrip",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "getTripRoute",
                    "defaultValue": "buildTripRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "getTripOfTheDay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                },
                {
                    "name": "Rating"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "Co2Pipe",
                    "type": "pipe"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterLink } from '@angular/router';\r\nimport { TripDef } from '@app/interfaces/trip-def.interface';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CardModule } from 'primeng/card';\r\nimport { Rating } from 'primeng/rating';\r\nimport { Co2Pipe } from '@app/pipes/co2.pipe';\r\nimport { buildTripRoute } from '@app/constants/app-routes.constant';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-trip-of-the-day',\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    Rating,\r\n    RouterLink,\r\n    Co2Pipe,\r\n    TranslateModule,\r\n],\r\n  templateUrl: './trip-of-the-day.component.html',\r\n  styleUrl: './trip-of-the-day.component.scss'\r\n})\r\nexport class TripOfTheDayComponent {\r\n  @Input() trip!: TripDef | null;\r\n  @Input() loading!: boolean;\r\n  @Input() hasError!: boolean;\r\n\r\n  @Output() requestTrip: EventEmitter<void> = new EventEmitter();\r\n\r\n  getTripOfTheDay():void {\r\n    this.requestTrip.emit()\r\n  }\r\n\r\n  getTripRoute = buildTripRoute;\r\n}\r\n",
            "styleUrl": "./trip-of-the-day.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex justify-center p-4 bg-gray-200\">\r\n    @if (trip) {\r\n        <p-card [style]=\"{ width: '40rem', overflow: 'hidden' }\" class=\"flex\">\r\n            <ng-template #header>\r\n                <div class=\"flex bg-gray-100\">\r\n                    <img [alt]=\"trip.title\" class=\"w-48 h-auto object-cover\" [src]=\"trip.thumbnailUrl\" />\r\n                    <div class=\"p-4 flex flex-col flex-1\">\r\n                        <h1 class=\"text-xl font-bold pb-3\">{{ trip.title }}</h1>\r\n                        <p-rating class=\"pb-1\" [(ngModel)]=\"trip.rating\" [readonly]=\"true\" [disabled]=\"true\" />\r\n                        <p>{{ trip.description }}</p>\r\n                        <ul class=\"flex list-none space-x-2\">\r\n                            <li>{{ trip.price | currency: 'USD' }}</li>\r\n                            <li>{{ trip.verticalType | titlecase }}</li>\r\n                            <li>{{ trip.co2Emission | co2 }}</li>\r\n                        </ul>\r\n                        <div class=\"pt-2\">\r\n                            <p-button [routerLink]=\"getTripRoute(trip.id)\" [label]=\"'content.view' | translate\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </p-card>\r\n    } @else {\r\n        <p-button (click)=\"getTripOfTheDay()\" [loading]=\"loading\" size=\"large\" [label]=\"'content.discover-trip-of-the-day' | translate\" />\r\n    }\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "ApiEndpointUrls",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/api-endpoint-urls.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    TRIPS: '/trips',\r\n    TRIP: '/trips/{id}',\r\n    TRIP_OF_THE_DAY: '/trips/random/trip-of-the-day',\r\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideAnimationsAsync(),\r\n    providePrimeNG({\r\n      theme: {\r\n        preset: Aura,\r\n      },\r\n    }),\r\n    provideHttpClient(),\r\n    provideStore(\r\n      {\r\n        feature: appReducer,\r\n      },\r\n      {\r\n        initialState: {\r\n          feature: initialState,\r\n        },\r\n      },\r\n    ),\r\n    provideEffects([AppEffects]),\r\n    importProvidersFrom([\r\n      TranslateModule.forRoot({\r\n        loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: httpLoaderFactory,\r\n          deps: [HttpClient],\r\n        },\r\n        compiler: {\r\n          provide: TranslateCompiler,\r\n          useClass: TranslateMessageFormatCompiler,\r\n        },\r\n      }),\r\n    ]),\r\n    provideStoreDevtools({\r\n      maxAge: 25,\r\n      logOnly: environment.production,\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n\r\n  on(\r\n    AppActions.setListOfTripsPagination,\r\n    (state, { pagination, forceFilter }) => {\r\n      const newPagination: TripsPagination = {\r\n        ...state.listOfTrips.pagination,\r\n        ...pagination,\r\n        filter: {\r\n          ...(forceFilter\r\n            ? initialState.listOfTrips.pagination.filter\r\n            : state.listOfTrips.pagination.filter),\r\n          ...pagination.filter,\r\n        },\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        listOfTrips: {\r\n          ...state.listOfTrips,\r\n          pagination: newPagination,\r\n        },\r\n      };\r\n    },\r\n  ),\r\n\r\n  on(AppActions.loadListOfTripsRequest, (state) => ({\r\n    ...state,\r\n    listOfTrips: {\r\n      ...state.listOfTrips,\r\n      isLoading: true,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadListOfTripsSuccess, (state, { items, itemsNumber }) => ({\r\n    ...state,\r\n    listOfTrips: {\r\n      ...state.listOfTrips,\r\n      items: items,\r\n      itemsNumber: itemsNumber,\r\n      isLoading: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadListOfTripsFailure, (state) => ({\r\n    ...state,\r\n    listOfTrips: {\r\n      ...state.listOfTrips,\r\n      isLoading: false,\r\n      hasError: true,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripDetailsRequest, (state, { itemId }) => {\r\n    const tripOverview = state.listOfTrips.items.find((it) => it.id === itemId);\r\n    const preloadedTripOverview: TripDef | undefined = tripOverview && {\r\n      ...tripOverview,\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      selectedTrip: {\r\n        ...state.selectedTrip,\r\n        item: preloadedTripOverview,\r\n        isLoading: true,\r\n        hasError: false,\r\n      },\r\n    };\r\n  }),\r\n\r\n  on(AppActions.loadTripDetailsSuccess, (state, { item }) => ({\r\n    ...state,\r\n    selectedTrip: {\r\n      ...state.selectedTrip,\r\n      item: item,\r\n      isLoading: false,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripDetailsFailure, (state) => ({\r\n    ...state,\r\n    selectedTrip: {\r\n      ...state.selectedTrip,\r\n      isLoading: false,\r\n      hasError: true,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripOfTheDayRequest, (state) => ({\r\n    ...state,\r\n    tripOfTheDay: {\r\n      ...state.selectedTrip,\r\n      isLoading: true,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripOfTheDaySuccess, (state, { item }) => ({\r\n    ...state,\r\n    tripOfTheDay: {\r\n      ...state.selectedTrip,\r\n      item: item,\r\n      isLoading: false,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripOfTheDayFailure, (state) => ({\r\n    ...state,\r\n    tripOfTheDay: {\r\n      ...state.selectedTrip,\r\n      isLoading: false,\r\n      hasError: true,\r\n    },\r\n  })),\r\n)"
            },
            {
                "name": "AppRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/app-routes.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    TRIPS: 'trips',\r\n    TRIP: 'trip/:tripId',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: false,\r\n    apiUrl: 'https://iy3ipnv3uc.execute-api.eu-west-1.amazonaws.com/Prod/v1',\r\n    locale: null\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.it.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: true,\r\n    apiUrl: 'https://iy3ipnv3uc.execute-api.eu-west-1.amazonaws.com/Prod/v1',\r\n    locale: 'it-IT'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: true,\r\n    apiUrl: 'https://iy3ipnv3uc.execute-api.eu-west-1.amazonaws.com/Prod/v1',\r\n    locale: null\r\n}"
            },
            {
                "name": "httpLoaderFactory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TranslateHttpLoader",
                "defaultValue": "(\r\n  http: HttpClient,\r\n) => new TranslateHttpLoader(http, './../i18n/', '.json')"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "{\r\n  listOfTrips: {\r\n    items: [],\r\n    itemsNumber: 0,\r\n    pagination: {\r\n      pageNumber: 1,\r\n      pageSize: 5,\r\n      sortProperty: TripsFilterSortProperty.title,\r\n      sortDescending: false,\r\n    },\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  selectedTrip: {\r\n    item: undefined,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  tripOfTheDay: {\r\n    item: undefined,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n}"
            },
            {
                "name": "initialStateTest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/tests/app-state-test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "{\r\n  listOfTrips: {\r\n    items: [mockTrip1],\r\n    itemsNumber: 1,\r\n    pagination: {\r\n      pageNumber: 15,\r\n      pageSize: 3,\r\n      sortProperty: TripsFilterSortProperty.price,\r\n      sortDescending: true,\r\n      filter: {\r\n        title: mockTrip2.title,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  selectedTrip: {\r\n    item: mockTrip2,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  tripOfTheDay: {\r\n    item: mockTrip1,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n}"
            },
            {
                "name": "loadListOfTripsFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load list of trips - Failure',\r\n)"
            },
            {
                "name": "loadListOfTripsRequest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load list of trips - Request',\r\n)"
            },
            {
                "name": "loadListOfTripsSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load list of trips - Success',\r\n  props<{ items: TripDef[]; itemsNumber: number }>(),\r\n)"
            },
            {
                "name": "loadTripDetailsFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load trip details - Failure',\r\n)"
            },
            {
                "name": "loadTripDetailsRequest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load trip details - Request',\r\n  props<{ itemId: string }>(),\r\n)"
            },
            {
                "name": "loadTripDetailsSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load trip details - Success',\r\n  props<{ item: TripDef }>(),\r\n)"
            },
            {
                "name": "loadTripOfTheDayFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load trip of the day - Failure',\r\n)"
            },
            {
                "name": "loadTripOfTheDayRequest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load trip of the day - Request',\r\n)"
            },
            {
                "name": "loadTripOfTheDaySuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Load trip of the day - Success',\r\n  props<{ item: TripDef }>(),\r\n)"
            },
            {
                "name": "mockTrip1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/tests/app-state-test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\r\n  id: 'id1',\r\n  title: 'title1',\r\n  description: 'description1',\r\n} as TripDef"
            },
            {
                "name": "mockTrip2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/tests/app-state-test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\r\n  id: 'id2',\r\n  title: 'title2',\r\n  description: 'description2',\r\n} as TripDef"
            },
            {
                "name": "selectAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AppState>('feature')"
            },
            {
                "name": "selectedTripHasError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.selectedTrip.hasError,\r\n)"
            },
            {
                "name": "selectedTripIsLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.selectedTrip.isLoading,\r\n)"
            },
            {
                "name": "selectedTripItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.selectedTrip.item,\r\n)"
            },
            {
                "name": "selectListOfTripsHasError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.hasError,\r\n)"
            },
            {
                "name": "selectListOfTripsIsLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.isLoading,\r\n)"
            },
            {
                "name": "selectListOfTripsItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.items,\r\n)"
            },
            {
                "name": "selectListOfTripsItemsNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.itemsNumber,\r\n)"
            },
            {
                "name": "selectListOfTripsPagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.pagination,\r\n)"
            },
            {
                "name": "setListOfTripsPagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[App] Set list of trips pagination',\r\n  props<{ pagination: Partial<TripsPagination>; forceFilter: boolean }>(),\r\n)"
            },
            {
                "name": "tripOfTheDayHasError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.tripOfTheDay.hasError,\r\n)"
            },
            {
                "name": "tripOfTheDayIsLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.tripOfTheDay.isLoading,\r\n)"
            },
            {
                "name": "tripOfTheDayItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.tripOfTheDay.item,\r\n)"
            },
            {
                "name": "VerticalTypeTranslationKeys",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/enum/vertical-type.enum.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<VerticalType, string>",
                "defaultValue": "{\r\n  [VerticalType.car]: 'content.vertical-type-values.car',\r\n  [VerticalType.flight]: 'content.vertical-type-values.flight',\r\n  [VerticalType.train]: 'content.vertical-type-values.train',\r\n  [VerticalType.hotel]: 'content.vertical-type-values.hotel',\r\n}"
            }
        ],
        "functions": [
            {
                "name": "buildTripRoute",
                "file": "src/app/constants/app-routes.constant.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "tripId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "tripId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "TripsFilterSortProperty",
                "childs": [
                    {
                        "name": "title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "title"
                    },
                    {
                        "name": "price",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "price"
                    },
                    {
                        "name": "rating",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "rating"
                    },
                    {
                        "name": "creationDate",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "creationDate"
                    },
                    {
                        "name": "verticalType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "verticalType"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/interfaces/trips-filter.interface.ts"
            },
            {
                "name": "VerticalType",
                "childs": [
                    {
                        "name": "car",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "car"
                    },
                    {
                        "name": "flight",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flight"
                    },
                    {
                        "name": "train",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "train"
                    },
                    {
                        "name": "hotel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "hotel"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/enum/vertical-type.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/constants/api-endpoint-urls.constant.ts": [
                {
                    "name": "ApiEndpointUrls",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/api-endpoint-urls.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    TRIPS: '/trips',\r\n    TRIP: '/trips/{id}',\r\n    TRIP_OF_THE_DAY: '/trips/random/trip-of-the-day',\r\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideAnimationsAsync(),\r\n    providePrimeNG({\r\n      theme: {\r\n        preset: Aura,\r\n      },\r\n    }),\r\n    provideHttpClient(),\r\n    provideStore(\r\n      {\r\n        feature: appReducer,\r\n      },\r\n      {\r\n        initialState: {\r\n          feature: initialState,\r\n        },\r\n      },\r\n    ),\r\n    provideEffects([AppEffects]),\r\n    importProvidersFrom([\r\n      TranslateModule.forRoot({\r\n        loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: httpLoaderFactory,\r\n          deps: [HttpClient],\r\n        },\r\n        compiler: {\r\n          provide: TranslateCompiler,\r\n          useClass: TranslateMessageFormatCompiler,\r\n        },\r\n      }),\r\n    ]),\r\n    provideStoreDevtools({\r\n      maxAge: 25,\r\n      logOnly: environment.production,\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "httpLoaderFactory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateHttpLoader",
                    "defaultValue": "(\r\n  http: HttpClient,\r\n) => new TranslateHttpLoader(http, './../i18n/', '.json')"
                }
            ],
            "src/app/store/app.reducer.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n\r\n  on(\r\n    AppActions.setListOfTripsPagination,\r\n    (state, { pagination, forceFilter }) => {\r\n      const newPagination: TripsPagination = {\r\n        ...state.listOfTrips.pagination,\r\n        ...pagination,\r\n        filter: {\r\n          ...(forceFilter\r\n            ? initialState.listOfTrips.pagination.filter\r\n            : state.listOfTrips.pagination.filter),\r\n          ...pagination.filter,\r\n        },\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        listOfTrips: {\r\n          ...state.listOfTrips,\r\n          pagination: newPagination,\r\n        },\r\n      };\r\n    },\r\n  ),\r\n\r\n  on(AppActions.loadListOfTripsRequest, (state) => ({\r\n    ...state,\r\n    listOfTrips: {\r\n      ...state.listOfTrips,\r\n      isLoading: true,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadListOfTripsSuccess, (state, { items, itemsNumber }) => ({\r\n    ...state,\r\n    listOfTrips: {\r\n      ...state.listOfTrips,\r\n      items: items,\r\n      itemsNumber: itemsNumber,\r\n      isLoading: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadListOfTripsFailure, (state) => ({\r\n    ...state,\r\n    listOfTrips: {\r\n      ...state.listOfTrips,\r\n      isLoading: false,\r\n      hasError: true,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripDetailsRequest, (state, { itemId }) => {\r\n    const tripOverview = state.listOfTrips.items.find((it) => it.id === itemId);\r\n    const preloadedTripOverview: TripDef | undefined = tripOverview && {\r\n      ...tripOverview,\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      selectedTrip: {\r\n        ...state.selectedTrip,\r\n        item: preloadedTripOverview,\r\n        isLoading: true,\r\n        hasError: false,\r\n      },\r\n    };\r\n  }),\r\n\r\n  on(AppActions.loadTripDetailsSuccess, (state, { item }) => ({\r\n    ...state,\r\n    selectedTrip: {\r\n      ...state.selectedTrip,\r\n      item: item,\r\n      isLoading: false,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripDetailsFailure, (state) => ({\r\n    ...state,\r\n    selectedTrip: {\r\n      ...state.selectedTrip,\r\n      isLoading: false,\r\n      hasError: true,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripOfTheDayRequest, (state) => ({\r\n    ...state,\r\n    tripOfTheDay: {\r\n      ...state.selectedTrip,\r\n      isLoading: true,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripOfTheDaySuccess, (state, { item }) => ({\r\n    ...state,\r\n    tripOfTheDay: {\r\n      ...state.selectedTrip,\r\n      item: item,\r\n      isLoading: false,\r\n      hasError: false,\r\n    },\r\n  })),\r\n\r\n  on(AppActions.loadTripOfTheDayFailure, (state) => ({\r\n    ...state,\r\n    tripOfTheDay: {\r\n      ...state.selectedTrip,\r\n      isLoading: false,\r\n      hasError: true,\r\n    },\r\n  })),\r\n)"
                }
            ],
            "src/app/constants/app-routes.constant.ts": [
                {
                    "name": "AppRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/app-routes.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    TRIPS: 'trips',\r\n    TRIP: 'trip/:tripId',\r\n}"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: false,\r\n    apiUrl: 'https://iy3ipnv3uc.execute-api.eu-west-1.amazonaws.com/Prod/v1',\r\n    locale: null\r\n}"
                }
            ],
            "src/environments/environment.it.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.it.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: true,\r\n    apiUrl: 'https://iy3ipnv3uc.execute-api.eu-west-1.amazonaws.com/Prod/v1',\r\n    locale: 'it-IT'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: true,\r\n    apiUrl: 'https://iy3ipnv3uc.execute-api.eu-west-1.amazonaws.com/Prod/v1',\r\n    locale: null\r\n}"
                }
            ],
            "src/app/store/app.state.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "{\r\n  listOfTrips: {\r\n    items: [],\r\n    itemsNumber: 0,\r\n    pagination: {\r\n      pageNumber: 1,\r\n      pageSize: 5,\r\n      sortProperty: TripsFilterSortProperty.title,\r\n      sortDescending: false,\r\n    },\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  selectedTrip: {\r\n    item: undefined,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  tripOfTheDay: {\r\n    item: undefined,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n}"
                }
            ],
            "src/app/store/tests/app-state-test.ts": [
                {
                    "name": "initialStateTest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/tests/app-state-test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "{\r\n  listOfTrips: {\r\n    items: [mockTrip1],\r\n    itemsNumber: 1,\r\n    pagination: {\r\n      pageNumber: 15,\r\n      pageSize: 3,\r\n      sortProperty: TripsFilterSortProperty.price,\r\n      sortDescending: true,\r\n      filter: {\r\n        title: mockTrip2.title,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  selectedTrip: {\r\n    item: mockTrip2,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n  tripOfTheDay: {\r\n    item: mockTrip1,\r\n    isLoading: false,\r\n    hasError: false,\r\n  },\r\n}"
                },
                {
                    "name": "mockTrip1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/tests/app-state-test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\r\n  id: 'id1',\r\n  title: 'title1',\r\n  description: 'description1',\r\n} as TripDef"
                },
                {
                    "name": "mockTrip2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/tests/app-state-test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\r\n  id: 'id2',\r\n  title: 'title2',\r\n  description: 'description2',\r\n} as TripDef"
                }
            ],
            "src/app/store/app.actions.ts": [
                {
                    "name": "loadListOfTripsFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load list of trips - Failure',\r\n)"
                },
                {
                    "name": "loadListOfTripsRequest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load list of trips - Request',\r\n)"
                },
                {
                    "name": "loadListOfTripsSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load list of trips - Success',\r\n  props<{ items: TripDef[]; itemsNumber: number }>(),\r\n)"
                },
                {
                    "name": "loadTripDetailsFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load trip details - Failure',\r\n)"
                },
                {
                    "name": "loadTripDetailsRequest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load trip details - Request',\r\n  props<{ itemId: string }>(),\r\n)"
                },
                {
                    "name": "loadTripDetailsSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load trip details - Success',\r\n  props<{ item: TripDef }>(),\r\n)"
                },
                {
                    "name": "loadTripOfTheDayFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load trip of the day - Failure',\r\n)"
                },
                {
                    "name": "loadTripOfTheDayRequest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load trip of the day - Request',\r\n)"
                },
                {
                    "name": "loadTripOfTheDaySuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Load trip of the day - Success',\r\n  props<{ item: TripDef }>(),\r\n)"
                },
                {
                    "name": "setListOfTripsPagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[App] Set list of trips pagination',\r\n  props<{ pagination: Partial<TripsPagination>; forceFilter: boolean }>(),\r\n)"
                }
            ],
            "src/app/store/app.selectors.ts": [
                {
                    "name": "selectAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppState>('feature')"
                },
                {
                    "name": "selectedTripHasError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.selectedTrip.hasError,\r\n)"
                },
                {
                    "name": "selectedTripIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.selectedTrip.isLoading,\r\n)"
                },
                {
                    "name": "selectedTripItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.selectedTrip.item,\r\n)"
                },
                {
                    "name": "selectListOfTripsHasError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.hasError,\r\n)"
                },
                {
                    "name": "selectListOfTripsIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.isLoading,\r\n)"
                },
                {
                    "name": "selectListOfTripsItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.items,\r\n)"
                },
                {
                    "name": "selectListOfTripsItemsNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.itemsNumber,\r\n)"
                },
                {
                    "name": "selectListOfTripsPagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.listOfTrips.pagination,\r\n)"
                },
                {
                    "name": "tripOfTheDayHasError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.tripOfTheDay.hasError,\r\n)"
                },
                {
                    "name": "tripOfTheDayIsLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.tripOfTheDay.isLoading,\r\n)"
                },
                {
                    "name": "tripOfTheDayItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state) => state.tripOfTheDay.item,\r\n)"
                }
            ],
            "src/app/enum/vertical-type.enum.ts": [
                {
                    "name": "VerticalTypeTranslationKeys",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/enum/vertical-type.enum.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<VerticalType, string>",
                    "defaultValue": "{\r\n  [VerticalType.car]: 'content.vertical-type-values.car',\r\n  [VerticalType.flight]: 'content.vertical-type-values.flight',\r\n  [VerticalType.train]: 'content.vertical-type-values.train',\r\n  [VerticalType.hotel]: 'content.vertical-type-values.hotel',\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/constants/app-routes.constant.ts": [
                {
                    "name": "buildTripRoute",
                    "file": "src/app/constants/app-routes.constant.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/interfaces/trips-filter.interface.ts": [
                {
                    "name": "TripsFilterSortProperty",
                    "childs": [
                        {
                            "name": "title",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "title"
                        },
                        {
                            "name": "price",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "price"
                        },
                        {
                            "name": "rating",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "rating"
                        },
                        {
                            "name": "creationDate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "creationDate"
                        },
                        {
                            "name": "verticalType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "verticalType"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/interfaces/trips-filter.interface.ts"
                }
            ],
            "src/app/enum/vertical-type.enum.ts": [
                {
                    "name": "VerticalType",
                    "childs": [
                        {
                            "name": "car",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "car"
                        },
                        {
                            "name": "flight",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flight"
                        },
                        {
                            "name": "train",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "train"
                        },
                        {
                            "name": "hotel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "hotel"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/enum/vertical-type.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list-of-trips/list-of-trips-filter/list-of-trips-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListOfTripsFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list-of-trips/list-of-trips-table/list-of-trips-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListOfTripsTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list-of-trips/list-of-trips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListOfTripsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list-of-trips/trip-of-the-day/trip-of-the-day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TripOfTheDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/trip-detail/trip-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TripDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/trip-detail/trip/trip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TripComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/constants/api-endpoint-urls.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ApiEndpointUrls",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/constants/app-routes.constant.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "buildTripRoute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/constants/app-routes.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/enum/vertical-type.enum.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalTypeTranslationKeys",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/persistance.inferface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PersistedItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/trip-def.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListOfTripsDef",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/trip-def.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TripDef",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/trip-dto.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListOfTripsDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/trip-dto.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TripDto",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/trips-filter.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TripsFilter",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/trips-filter.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TripsPagination",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/co2.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "Co2Pipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/persistance.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PersistanceService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/trips-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TripsDataService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/trips-mapper.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TripsMapperService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/trips-score.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TripsScoreService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadListOfTripsFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadListOfTripsRequest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadListOfTripsSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTripDetailsFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTripDetailsRequest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTripDetailsSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTripOfTheDayFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTripOfTheDayRequest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTripOfTheDaySuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setListOfTripsPagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppEffects",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.facade.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppFacade",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectedTripHasError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectedTripIsLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectedTripItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectListOfTripsHasError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectListOfTripsIsLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectListOfTripsItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectListOfTripsItemsNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectListOfTripsPagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tripOfTheDayHasError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tripOfTheDayIsLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tripOfTheDayItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/tests/app-state-test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialStateTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/tests/app-state-test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTrip1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/tests/app-state-test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTrip2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.it.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}